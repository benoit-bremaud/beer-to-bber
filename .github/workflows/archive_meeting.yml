name: Archive Meeting Notes

on:
  issues:
    types:
      - closed

permissions:
  contents: write

jobs:
  archive-meeting:
    runs-on: ubuntu-latest
    
    steps:
      # Vérification du dépôt
      - name: Checkout repository
        uses: actions/checkout@v3

      # Installation de jq
      - name: Install jq
        run: sudo apt-get install -y jq

      # Étape de débogage pour afficher les labels
      - name: Debug Labels
        run: |
          echo "Labels:"
          echo '${{ toJson(github.event.issue.labels) }}' | jq

      # Vérifier la présence du label "meeting"
      - name: Check for meeting label
        id: check_meeting
        run: |
          echo '${{ toJson(github.event.issue.labels) }}' | jq -e '.[] | select(.name == "meeting")' > /dev/null \
            && echo "Label meeting found" || (echo "Label meeting not found" && exit 1)

      # Créer le dossier si nécessaire
      - name: Ensure meeting notes directory exists
        run: mkdir -p docs/meeting_notes

      # Créer le fichier Markdown pour le compte-rendu
      - name: Generate meeting notes
        run: |
          echo "Generating meeting notes..."
          MEETING_TYPE=$(echo '${{ toJson(github.event.issue.labels) }}' | jq -r '.[] | select(.name == "kick-off" or .name == "follow-up" or .name == "validation") | .name' || echo "meeting")
          ISSUE_DATE=$(date +"%Y_%m_%d")
          ISSUE_TITLE=$(echo "${{ github.event.issue.title }}" | tr ' ' '_')
          OUTPUT_FILE="docs/meeting_notes/${MEETING_TYPE}_meeting_${ISSUE_DATE}.md"

          # Créer le fichier Markdown basé sur le template
          cat > $OUTPUT_FILE <<- EOM
          # Compte-Rendu de Réunion - ${{ github.event.issue.title }}

          ## Participants
          (À compléter)

          ## Décisions
          - (À compléter)

          ## Actions à Suivre
          | **Action**         | **Responsable** | **Échéance**   |
          |--------------------|-----------------|----------------|

          ## Questions en Suspens
          - (À compléter)

          ## Notes Additionnelles
          ${{ github.event.issue.body }}
          EOM

          echo "File created: $OUTPUT_FILE"

      # Ajouter les modifications au dépôt
      - name: Commit changes
        run: |
          git config user.name "GitHub Actions"
          git config user.email "actions@github.com"
          git add docs/meeting_notes/
          git commit -m "chore: archive meeting notes for ${{ github.event.issue.title }}"
          git push
